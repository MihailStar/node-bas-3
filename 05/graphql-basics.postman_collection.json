{
  "info": {
    "_postman_id": "00513510-c724-4a5e-83c7-41f12eeafb3a",
    "name": "graphql-basics",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "memberTypes",
      "item": [
        {
          "name": "memberTypes",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query Query {\r\n  memberTypes {\r\n    id\r\n    discount\r\n    monthPostsLimit\r\n  }\r\n}\r\n",
                "variables": ""
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "memberType",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query Query($id: ID!) {\r\n  memberType(id: $id) {\r\n    id\r\n    discount\r\n    monthPostsLimit\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"id\": \"{{memberTypeId}}\"\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "updateMemberType",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation Mutation($id: ID!, $dto: UpdateMemberTypeDto!) {\r\n  updateMemberType(id: $id, dto: $dto) {\r\n    id\r\n    discount\r\n    monthPostsLimit\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"id\": \"{{memberTypeId}}\",\r\n  \"dto\": {\r\n    \"discount\": 0,\r\n    \"monthPostsLimit\": 0\r\n  }\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "posts",
      "item": [
        {
          "name": "posts",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query Query {\r\n  posts {\r\n    id\r\n    title\r\n    content\r\n    userId\r\n  }\r\n}\r\n",
                "variables": ""
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "post",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query Query($id: ID!) {\r\n  post(id: $id) {\r\n    id\r\n    title\r\n    content\r\n    userId\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"id\": \"{{postId}}\"\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "createPost",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const { data: { createPost: { id: postId } } } = pm.response.json();\r",
                  "\r",
                  "pm.collectionVariables.set(\"postId\", postId);\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation Mutation($dto: CreatePostDto!) {\r\n  createPost(dto: $dto) {\r\n    id\r\n    title\r\n    content\r\n    userId\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"dto\": {\r\n    \"title\": \"\",\r\n    \"content\": \"\",\r\n    \"userId\": \"{{userId}}\"\r\n  }\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "updatePost",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation Mutation($id: ID!, $dto: UpdatePostDto!) {\r\n  updatePost(id: $id, dto: $dto) {\r\n    id\r\n    title\r\n    content\r\n    userId\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"id\": \"{{postId}}\",\r\n  \"dto\": {\r\n    \"title\": \"\",\r\n    \"content\": \"\"\r\n  }\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "deletePost",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"postId\", undefined);\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation Mutation($id: ID!) {\r\n  deletePost(id: $id) {\r\n    id\r\n    title\r\n    content\r\n    userId\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"id\": \"{{postId}}\"\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "profiles",
      "item": [
        {
          "name": "profiles",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query Query {\r\n  profiles {\r\n    id\r\n    avatar\r\n    sex\r\n    birthday\r\n    country\r\n    street\r\n    city\r\n    memberTypeId\r\n    userId\r\n  }\r\n}\r\n",
                "variables": ""
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "profile",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query Query($id: ID!) {\r\n  profile(id: $id) {\r\n    id\r\n    avatar\r\n    sex\r\n    birthday\r\n    country\r\n    street\r\n    city\r\n    memberTypeId\r\n    userId\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"id\": \"{{profileId}}\"\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "createProfile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const { data: { createProfile: { id: profileId } } } = pm.response.json();\r",
                  "\r",
                  "pm.collectionVariables.set(\"profileId\", profileId);\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation Mutation($dto: CreateProfileDto!) {\r\n  createProfile(dto: $dto) {\r\n    id\r\n    avatar\r\n    sex\r\n    birthday\r\n    country\r\n    street\r\n    city\r\n    memberTypeId\r\n    userId\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"dto\": {\r\n    \"avatar\": \"\",\r\n    \"sex\": \"\",\r\n    \"birthday\": 0,\r\n    \"country\": \"\",\r\n    \"street\": \"\",\r\n    \"city\": \"\",\r\n    \"memberTypeId\": \"{{memberTypeId}}\",\r\n    \"userId\": \"{{userId}}\"\r\n  }\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "updateProfile",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation Mutation($id: ID!, $dto: UpdateProfileDto!) {\r\n  updateProfile(id: $id, dto: $dto) {\r\n    id\r\n    avatar\r\n    sex\r\n    birthday\r\n    country\r\n    street\r\n    city\r\n    memberTypeId\r\n    userId\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"id\": \"{{profileId}}\",\r\n  \"dto\": {\r\n    \"avatar\": \"\",\r\n    \"sex\": \"\",\r\n    \"birthday\": 0,\r\n    \"country\": \"\",\r\n    \"street\": \"\",\r\n    \"city\": \"\",\r\n    \"memberTypeId\": \"{{memberTypeId}}\"\r\n  }\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "deleteProfile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"profileId\", undefined);\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation Mutation($id: ID!) {\r\n  deleteProfile(id: $id) {\r\n    id\r\n    avatar\r\n    sex\r\n    birthday\r\n    country\r\n    street\r\n    city\r\n    memberTypeId\r\n    userId\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"id\": \"{{profileId}}\"\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "users",
      "item": [
        {
          "name": "users",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query Query {\r\n  users {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n}\r\n",
                "variables": ""
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "user",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query Query($id: ID!) {\r\n  user(id: $id) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"id\": \"{{userId}}\"\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "createUser",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const { data: { createUser: { id: userId } } } = pm.response.json();\r",
                  "\r",
                  "pm.collectionVariables.set(\"userId\", userId);\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation Mutation($dto: CreateUserDto!) {\r\n  createUser(dto: $dto) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"dto\": {\r\n    \"firstName\": \"\",\r\n    \"lastName\": \"\",\r\n    \"email\": \"\"\r\n  }\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "updateUser",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation Mutation($id: ID!, $dto: UpdateUserDto!) {\r\n  updateUser(id: $id, dto: $dto) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"id\": \"{{userId}}\",\r\n  \"dto\": {\r\n    \"firstName\": \"\",\r\n    \"lastName\": \"\",\r\n    \"email\": \"\"\r\n  }\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "deleteUser",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"userId\", undefined);\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation Mutation($id: ID!) {\r\n  deleteUser(id: $id) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"id\": \"{{userId}}\"\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "subscribeTo",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation Mutation($id: ID!, $dto: SubscribeUserDto!) {\r\n  subscribeTo(id: $id, dto: $dto) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"id\": \"{{userId}}\",\r\n  \"dto\": {\r\n    \"userId\": \"{{userId}}\"\r\n  }\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        },
        {
          "name": "unsubscribeFrom",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation Mutation($id: ID!, $dto: SubscribeUserDto!) {\r\n  unsubscribeFrom(id: $id, dto: $dto) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n}\r\n",
                "variables": "{\r\n  \"id\": \"{{userId}}\",\r\n  \"dto\": {\r\n    \"userId\": \"{{userId}}\"\r\n  }\r\n}\r\n"
              }
            },
            "url": {
              "raw": "http://localhost:3000/graphql",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["graphql"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "2.1",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "query Query {\r\n  users {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n\r\n  profiles {\r\n    id\r\n    avatar\r\n    sex\r\n    birthday\r\n    country\r\n    street\r\n    city\r\n    memberTypeId\r\n    userId\r\n  }\r\n\r\n  posts {\r\n    id\r\n    title\r\n    content\r\n    userId\r\n  }\r\n\r\n  memberTypes {\r\n    id\r\n    discount\r\n    monthPostsLimit\r\n  }\r\n}\r\n",
            "variables": ""
          }
        },
        "url": {
          "raw": "http://localhost:3000/graphql",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["graphql"]
        }
      },
      "response": []
    },
    {
      "name": "2.2",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "query Query($userId: ID!, $profileId: ID!, $postId: ID!, $memberTypeId: ID!) {\r\n  user(id: $userId) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n\r\n  profile(id: $profileId) {\r\n    id\r\n    avatar\r\n    sex\r\n    birthday\r\n    country\r\n    street\r\n    city\r\n    memberTypeId\r\n    userId\r\n  }\r\n\r\n  post(id: $postId) {\r\n    id\r\n    title\r\n    content\r\n    userId\r\n  }\r\n\r\n  memberType(id: $memberTypeId) {\r\n    id\r\n    discount\r\n    monthPostsLimit\r\n  }\r\n}\r\n",
            "variables": "{\r\n  \"userId\": \"{{userId}}\",\r\n  \"profileId\": \"{{profileId}}\",\r\n  \"postId\": \"{{postId}}\",\r\n  \"memberTypeId\": \"{{memberTypeId}}\"\r\n}\r\n"
          }
        },
        "url": {
          "raw": "http://localhost:3000/graphql",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["graphql"]
        }
      },
      "response": []
    },
    {
      "name": "2.8",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "mutation Mutation($dto: CreateUserDto!) {\r\n  createUser(dto: $dto) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n}\r\n",
            "variables": "{\r\n  \"dto\": {\r\n    \"firstName\": \"\",\r\n    \"lastName\": \"\",\r\n    \"email\": \"\"\r\n  }\r\n}\r\n"
          }
        },
        "url": {
          "raw": "http://localhost:3000/graphql",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["graphql"]
        }
      },
      "response": []
    },
    {
      "name": "2.9",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "mutation Mutation($dto: CreateProfileDto!) {\r\n  createProfile(dto: $dto) {\r\n    id\r\n    avatar\r\n    sex\r\n    birthday\r\n    country\r\n    street\r\n    city\r\n    memberTypeId\r\n    userId\r\n  }\r\n}\r\n",
            "variables": "{\r\n  \"dto\": {\r\n    \"avatar\": \"\",\r\n    \"sex\": \"\",\r\n    \"birthday\": 0,\r\n    \"country\": \"\",\r\n    \"street\": \"\",\r\n    \"city\": \"\",\r\n    \"memberTypeId\": \"{{memberTypeId}}\",\r\n    \"userId\": \"{{userId}}\"\r\n  }\r\n}\r\n"
          }
        },
        "url": {
          "raw": "http://localhost:3000/graphql",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["graphql"]
        }
      },
      "response": []
    },
    {
      "name": "2.10",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "mutation Mutation($dto: CreatePostDto!) {\r\n  createPost(dto: $dto) {\r\n    id\r\n    title\r\n    content\r\n    userId\r\n  }\r\n}\r\n",
            "variables": "{\r\n  \"dto\": {\r\n    \"title\": \"\",\r\n    \"content\": \"\",\r\n    \"userId\": \"{{userId}}\"\r\n  }\r\n}\r\n"
          }
        },
        "url": {
          "raw": "http://localhost:3000/graphql",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["graphql"]
        }
      },
      "response": []
    },
    {
      "name": "2.11",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "mutation Mutation(\r\n  $createUserDto: CreateUserDto!\r\n  $createProfileDto: CreateProfileDto!\r\n  $createPostDto: CreatePostDto!\r\n) {\r\n  createUser(dto: $createUserDto) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n\r\n  createProfile(dto: $createProfileDto) {\r\n    id\r\n    avatar\r\n    sex\r\n    birthday\r\n    country\r\n    street\r\n    city\r\n    memberTypeId\r\n    userId\r\n  }\r\n\r\n  createPost(dto: $createPostDto) {\r\n    id\r\n    title\r\n    content\r\n    userId\r\n  }\r\n}\r\n",
            "variables": "{\r\n  \"createUserDto\": {\r\n    \"firstName\": \"\",\r\n    \"lastName\": \"\",\r\n    \"email\": \"\"\r\n  },\r\n\r\n  \"createProfileDto\": {\r\n    \"avatar\": \"\",\r\n    \"sex\": \"\",\r\n    \"birthday\": 0,\r\n    \"country\": \"\",\r\n    \"street\": \"\",\r\n    \"city\": \"\",\r\n    \"memberTypeId\": \"{{memberTypeId}}\",\r\n    \"userId\": \"{{userId}}\"\r\n  },\r\n\r\n  \"createPostDto\": {\r\n    \"title\": \"\",\r\n    \"content\": \"\",\r\n    \"userId\": \"{{userId}}\"\r\n  }\r\n}\r\n"
          }
        },
        "url": {
          "raw": "http://localhost:3000/graphql",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["graphql"]
        }
      },
      "response": []
    },
    {
      "name": "2.12",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "mutation Mutation($id: ID!, $dto: UpdateUserDto!) {\r\n  updateUser(id: $id, dto: $dto) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n}\r\n",
            "variables": "{\r\n  \"id\": \"{{userId}}\",\r\n  \"dto\": {\r\n    \"firstName\": \"\",\r\n    \"lastName\": \"\",\r\n    \"email\": \"\"\r\n  }\r\n}\r\n"
          }
        },
        "url": {
          "raw": "http://localhost:3000/graphql",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["graphql"]
        }
      },
      "response": []
    },
    {
      "name": "2.13",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "mutation Mutation($id: ID!, $dto: UpdateProfileDto!) {\r\n  updateProfile(id: $id, dto: $dto) {\r\n    id\r\n    avatar\r\n    sex\r\n    birthday\r\n    country\r\n    street\r\n    city\r\n    memberTypeId\r\n    userId\r\n  }\r\n}\r\n",
            "variables": "{\r\n  \"id\": \"{{profileId}}\",\r\n  \"dto\": {\r\n    \"avatar\": \"\",\r\n    \"sex\": \"\",\r\n    \"birthday\": 0,\r\n    \"country\": \"\",\r\n    \"street\": \"\",\r\n    \"city\": \"\",\r\n    \"memberTypeId\": \"{{memberTypeId}}\"\r\n  }\r\n}\r\n"
          }
        },
        "url": {
          "raw": "http://localhost:3000/graphql",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["graphql"]
        }
      },
      "response": []
    },
    {
      "name": "2.14",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "mutation Mutation($id: ID!, $dto: UpdatePostDto!) {\r\n  updatePost(id: $id, dto: $dto) {\r\n    id\r\n    title\r\n    content\r\n    userId\r\n  }\r\n}\r\n",
            "variables": "{\r\n  \"id\": \"{{postId}}\",\r\n  \"dto\": {\r\n    \"title\": \"\",\r\n    \"content\": \"\"\r\n  }\r\n}\r\n"
          }
        },
        "url": {
          "raw": "http://localhost:3000/graphql",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["graphql"]
        }
      },
      "response": []
    },
    {
      "name": "2.15",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "mutation Mutation($id: ID!, $dto: UpdateMemberTypeDto!) {\r\n  updateMemberType(id: $id, dto: $dto) {\r\n    id\r\n    discount\r\n    monthPostsLimit\r\n  }\r\n}\r\n",
            "variables": "{\r\n  \"id\": \"{{memberTypeId}}\",\r\n  \"dto\": {\r\n    \"discount\": 0,\r\n    \"monthPostsLimit\": 0\r\n  }\r\n}\r\n"
          }
        },
        "url": {
          "raw": "http://localhost:3000/graphql",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["graphql"]
        }
      },
      "response": []
    },
    {
      "name": "2.16",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "mutation Mutation(\r\n  $subscribeId: ID!\r\n  $subscribeDto: SubscribeUserDto!\r\n  $unsubscribeId: ID!\r\n  $unsubscribeDto: SubscribeUserDto!\r\n) {\r\n  subscribeTo(id: $subscribeId, dto: $subscribeDto) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n\r\n  unsubscribeFrom(id: $unsubscribeId, dto: $unsubscribeDto) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n}\r\n",
            "variables": "{\r\n    \"subscribeId\": \"{{userId}}\",\r\n    \"subscribeDto\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"unsubscribeId\": \"{{userId}}\",\r\n    \"unsubscribeDto\": {\r\n        \"userId\": \"{{userId}}\"\r\n    }\r\n}\r\n"
          }
        },
        "url": {
          "raw": "http://localhost:3000/graphql",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["graphql"]
        }
      },
      "response": []
    },
    {
      "name": "2.17",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "mutation Mutation(\r\n  $updateUserId: ID!\r\n  $updateUserDto: UpdateUserDto!\r\n  $updateProfileId: ID!\r\n  $updateProfileDto: UpdateProfileDto!\r\n  $updatePostId: ID!\r\n  $updatePostDto: UpdatePostDto!\r\n  $updateMemberTypeId: ID!\r\n  $updateMemberTypeDto: UpdateMemberTypeDto!\r\n  $subscribeId: ID!\r\n  $subscribeDto: SubscribeUserDto!\r\n  $unsubscribeId: ID!\r\n  $unsubscribeDto: SubscribeUserDto!\r\n) {\r\n  updateUser(id: $updateUserId, dto: $updateUserDto) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n\r\n  updateProfile(id: $updateProfileId, dto: $updateProfileDto) {\r\n    id\r\n    avatar\r\n    sex\r\n    birthday\r\n    country\r\n    street\r\n    city\r\n    memberTypeId\r\n    userId\r\n  }\r\n\r\n  updatePost(id: $updatePostId, dto: $updatePostDto) {\r\n    id\r\n    title\r\n    content\r\n    userId\r\n  }\r\n\r\n  updateMemberType(id: $updateMemberTypeId, dto: $updateMemberTypeDto) {\r\n    id\r\n    discount\r\n    monthPostsLimit\r\n  }\r\n\r\n  subscribeTo(id: $subscribeId, dto: $subscribeDto) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n\r\n  unsubscribeFrom(id: $unsubscribeId, dto: $unsubscribeDto) {\r\n    id\r\n    firstName\r\n    lastName\r\n    email\r\n    subscribedToUserIds\r\n  }\r\n}\r\n",
            "variables": "{\r\n  \"updateUserId\": \"{{userId}}\",\r\n  \"updateUserDto\": {\r\n    \"firstName\": \"\",\r\n    \"lastName\": \"\",\r\n    \"email\": \"\"\r\n  },\r\n\r\n  \"subscribeId\": \"{{userId}}\",\r\n  \"subscribeDto\": {\r\n    \"userId\": \"{{userId}}\"\r\n  },\r\n\r\n  \"unsubscribeId\": \"{{userId}}\",\r\n  \"unsubscribeDto\": {\r\n    \"userId\": \"{{userId}}\"\r\n  },\r\n\r\n  \"updateProfileId\": \"{{profileId}}\",\r\n  \"updateProfileDto\": {\r\n    \"avatar\": \"\",\r\n    \"sex\": \"\",\r\n    \"birthday\": 0,\r\n    \"country\": \"\",\r\n    \"street\": \"\",\r\n    \"city\": \"\",\r\n    \"memberTypeId\": \"{{memberTypeId}}\"\r\n  },\r\n\r\n  \"updatePostId\": \"{{postId}}\",\r\n  \"updatePostDto\": {\r\n    \"title\": \"\",\r\n    \"content\": \"\"\r\n  },\r\n\r\n  \"updateMemberTypeId\": \"{{memberTypeId}}\",\r\n  \"updateMemberTypeDto\": {\r\n    \"discount\": 0,\r\n    \"monthPostsLimit\": 0\r\n  }\r\n}\r\n"
          }
        },
        "url": {
          "raw": "http://localhost:3000/graphql",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["graphql"]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "memberTypeId",
      "value": "",
      "type": "default"
    },
    {
      "key": "postId",
      "value": "",
      "type": "default"
    },
    {
      "key": "profileId",
      "value": "",
      "type": "default"
    },
    {
      "key": "userId",
      "value": "",
      "type": "default"
    }
  ]
}
